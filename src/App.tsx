import { FileVideo, Github, Upload, VideoIcon, Wand2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { Textarea } from "./components/ui/textarea";
import { Label } from "@radix-ui/react-label";
import {
	Select,
	SelectContent,
	SelectItem,
	SelectTrigger,
	SelectValue,
} from "./components/ui/select";
import { Slider } from "./components/ui/slider";
import { VideoInputForm } from "./components/video-input-form";
import { PromptSelect } from "./components/prompt-select";
import { useState } from "react";
import { useCompletion } from "ai/react";

export const App = () => {
	const [temperature, setTemperature] = useState(0.5);
	const [videoId, setVideoId] = useState<null | string>(null);

	const {
		input,
		setInput,
		handleInputChange,
		handleSubmit,
		completion,
		isLoading,
	} = useCompletion({
		api: "http://localhost:3333/ai/complete",
		body: {
			videoId,
			temperature,
		},
		headers: {
			"Content-Type": "application/json",
		},
	});
	console.log(videoId);
	return (
		<div className="min-h-screen flex flex-col">
			<div className="px-6 py-3 flex items-center justify-between border-b">
				<div>
					<h1 className="text-xl font-bold">upload.ia</h1>
				</div>
				<div className="flex gap-3 items-center">
					<span className="text-sm text-muted-foreground">
						Powered by ❤️ in NLW by Rocketseat
					</span>
					<Separator orientation="vertical" className="h-6" />
					<Button variant="outline">
						<Github className="w-4 h-4 mr-2" />
						Github
					</Button>
				</div>
			</div>
			<main className="flex-1 p-6 flex gap-6">
				<div className="flex flex-col flex-1 gap-4">
					<div className="grid grid-rows-2 gap-4 flex-1">
						<Textarea
							placeholder="Include the prompt for AI..."
							className="resize-none p-5 leading-relaxed"
							value={input}
							onChange={handleInputChange}
						/>
						<Textarea
							readOnly
							placeholder="Result generated by AI..."
							className="resize-none p-5 leading-relaxed"
							value={completion}
						/>
					</div>
					<p className="text-sm text-muted-foreground">
						Remember: you can use the variable{" "}
						<code className="text-violet-400">{"{transcription}"}</code> in your
						prompt to add the transcript content of the selected video
					</p>
				</div>

				<aside className="w-80 space-y-6">
					<VideoInputForm onVideoUploaded={setVideoId} />
					<form className="w-80" onSubmit={handleSubmit}>
						<div className="w-80 space-y-6">
							<div className="space-y-2">
								<Label>Prompt</Label>
								<PromptSelect handlePromptSelect={setInput} />
								{/* <span className="block text-xs text-muted-foreground italic">
									You will be able to customize this option soon
								</span> */}
							</div>

							<Separator />

							<div className="space-y-2">
								<Label>Model</Label>
								<Select disabled defaultValue="gpt3.5">
									<SelectTrigger>
										<SelectValue></SelectValue>
									</SelectTrigger>
									<SelectContent>
										<SelectItem value="gpt3.5">GPT 3.5-turbo 16k</SelectItem>
									</SelectContent>
								</Select>
								<span className="block text-xs text-muted-foreground italic">
									You will be able to customize this option soon
								</span>
							</div>

							<Separator />

							<div className="space-y-4">
								<Label>Temperatura</Label>
								<Slider
									min={0}
									max={1}
									step={0.1}
									value={[temperature]}
									onValueChange={(value) => setTemperature(value[0])}
									className="cursor-pointer"
								/>
								<span className="block text-xs text-muted-foreground italic leading-relaxed">
									High values tend to make the result more creative and with
									possible errors.
								</span>
							</div>

							<Separator />

							<Button className="w-full" type="submit" disabled={isLoading}>
								To execute
								<Wand2 className="w-4 h-4 ml-2" />
							</Button>
						</div>
					</form>
				</aside>
			</main>
		</div>
	);
};
